语法

    0 $accept: calc $end

    1 calc: EOL
    2     | stmt EOL
    3     | LET NAME '(' symlist ')' '=' list EOL

    4 stmt: IF exp THEN list
    5     | IF exp THEN list ELSE list
    6     | WHILE exp DO list
    7     | exp

    8 list: ε
    9     | stmt ';' list

   10 exp: exp CMP exp
   11    | exp '+' exp
   12    | exp '-' exp
   13    | exp '*' exp
   14    | exp '/' exp
   15    | '|' exp
   16    | '(' exp ')'
   17    | '-' exp
   18    | NUMBER
   19    | NAME
   20    | NAME '=' exp
   21    | FUNC '(' explist ')'
   22    | NAME '(' explist ')'

   23 explist: exp
   24        | exp ',' explist

   25 symlist: NAME
   26        | NAME ',' symlist


终结语词，附有它们出现处的规则

    $end (0) 0
    '(' (40) 3 16 21 22
    ')' (41) 3 16 21 22
    '*' (42) 13
    '+' (43) 11
    ',' (44) 24 26
    '-' (45) 12 17
    '/' (47) 14
    ';' (59) 9
    '=' (61) 3 20
    '|' (124) 15
    error (256)
    NUMBER <d> (258) 18
    NAME <s> (259) 3 19 20 22 25 26
    FUNC <fn> (260) 21
    EOL (261) 1 2 3
    IF (262) 4 5
    THEN (263) 4 5
    ELSE (264) 5
    WHILE (265) 6
    DO (266) 6
    LET (267) 3
    CMP <fn> (268) 10
    UMINUS (269)


非终结语词，附有它们出现处的规则

    $accept (25)
        on left: 0
    calc (26)
        on left: 1 2 3
        on right: 0
    stmt <a> (27)
        on left: 4 5 6 7
        on right: 2 9
    list <a> (28)
        on left: 8 9
        on right: 3 4 5 6 9
    exp <a> (29)
        on left: 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 4 5 6 7 10 11 12 13 14 15 16 17 20 23 24
    explist <a> (30)
        on left: 23 24
        on right: 21 22 24
    symlist <sl> (31)
        on left: 25 26
        on right: 3 26


状态 0

    0 $accept: • calc $end

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    EOL     偏移，并进入状态 4
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    LET     偏移，并进入状态 7
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    calc  转到状态 11
    stmt  转到状态 12
    exp   转到状态 13


状态 1

   18 exp: NUMBER •

    $default  使用规则 18 以归约 (exp)


状态 2

   19 exp: NAME •
   20    | NAME • '=' exp
   22    | NAME • '(' explist ')'

    '='  偏移，并进入状态 14
    '('  偏移，并进入状态 15

    $default  使用规则 19 以归约 (exp)


状态 3

   21 exp: FUNC • '(' explist ')'

    '('  偏移，并进入状态 16


状态 4

    1 calc: EOL •

    $default  使用规则 1 以归约 (calc)


状态 5

    4 stmt: IF • exp THEN list
    5     | IF • exp THEN list ELSE list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 17


状态 6

    6 stmt: WHILE • exp DO list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 18


状态 7

    3 calc: LET • NAME '(' symlist ')' '=' list EOL

    NAME  偏移，并进入状态 19


状态 8

   17 exp: '-' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 20


状态 9

   15 exp: '|' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 21


状态 10

   16 exp: '(' • exp ')'

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 22


状态 11

    0 $accept: calc • $end

    $end  偏移，并进入状态 23


状态 12

    2 calc: stmt • EOL

    EOL  偏移，并进入状态 24


状态 13

    7 stmt: exp •
   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp

    CMP  偏移，并进入状态 25
    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29

    $default  使用规则 7 以归约 (stmt)


状态 14

   20 exp: NAME '=' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 30


状态 15

   22 exp: NAME '(' • explist ')'

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp      转到状态 31
    explist  转到状态 32


状态 16

   21 exp: FUNC '(' • explist ')'

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp      转到状态 31
    explist  转到状态 33


状态 17

    4 stmt: IF exp • THEN list
    5     | IF exp • THEN list ELSE list
   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp

    THEN  偏移，并进入状态 34
    CMP   偏移，并进入状态 25
    '+'   偏移，并进入状态 26
    '-'   偏移，并进入状态 27
    '*'   偏移，并进入状态 28
    '/'   偏移，并进入状态 29


状态 18

    6 stmt: WHILE exp • DO list
   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp

    DO   偏移，并进入状态 35
    CMP  偏移，并进入状态 25
    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29


状态 19

    3 calc: LET NAME • '(' symlist ')' '=' list EOL

    '('  偏移，并进入状态 36


状态 20

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   17    | '-' exp •

    $default  使用规则 17 以归约 (exp)


状态 21

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   15    | '|' exp •

    $default  使用规则 15 以归约 (exp)


状态 22

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   16    | '(' exp • ')'

    CMP  偏移，并进入状态 25
    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29
    ')'  偏移，并进入状态 37


状态 23

    0 $accept: calc $end •

    $default  接受


状态 24

    2 calc: stmt EOL •

    $default  使用规则 2 以归约 (calc)


状态 25

   10 exp: exp CMP • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 38


状态 26

   11 exp: exp '+' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 39


状态 27

   12 exp: exp '-' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 40


状态 28

   13 exp: exp '*' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 41


状态 29

   14 exp: exp '/' • exp

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp  转到状态 42


状态 30

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   20    | NAME '=' exp •

    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29

    $default  使用规则 20 以归约 (exp)


状态 31

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   23 explist: exp •
   24        | exp • ',' explist

    CMP  偏移，并进入状态 25
    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29
    ','  偏移，并进入状态 43

    $default  使用规则 23 以归约 (explist)


状态 32

   22 exp: NAME '(' explist • ')'

    ')'  偏移，并进入状态 44


状态 33

   21 exp: FUNC '(' explist • ')'

    ')'  偏移，并进入状态 45


状态 34

    4 stmt: IF exp THEN • list
    5     | IF exp THEN • list ELSE list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    $default  使用规则 8 以归约 (list)

    stmt  转到状态 46
    list  转到状态 47
    exp   转到状态 13


状态 35

    6 stmt: WHILE exp DO • list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    $default  使用规则 8 以归约 (list)

    stmt  转到状态 46
    list  转到状态 48
    exp   转到状态 13


状态 36

    3 calc: LET NAME '(' • symlist ')' '=' list EOL

    NAME  偏移，并进入状态 49

    symlist  转到状态 50


状态 37

   16 exp: '(' exp ')' •

    $default  使用规则 16 以归约 (exp)


状态 38

   10 exp: exp • CMP exp
   10    | exp CMP exp •
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp

    '+'  偏移，并进入状态 26
    '-'  偏移，并进入状态 27
    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29

    CMP  错误 (非相联的)

    $default  使用规则 10 以归约 (exp)


状态 39

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   11    | exp '+' exp •
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp

    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29

    $default  使用规则 11 以归约 (exp)


状态 40

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   12    | exp '-' exp •
   13    | exp • '*' exp
   14    | exp • '/' exp

    '*'  偏移，并进入状态 28
    '/'  偏移，并进入状态 29

    $default  使用规则 12 以归约 (exp)


状态 41

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   13    | exp '*' exp •
   14    | exp • '/' exp

    $default  使用规则 13 以归约 (exp)


状态 42

   10 exp: exp • CMP exp
   11    | exp • '+' exp
   12    | exp • '-' exp
   13    | exp • '*' exp
   14    | exp • '/' exp
   14    | exp '/' exp •

    $default  使用规则 14 以归约 (exp)


状态 43

   24 explist: exp ',' • explist

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    exp      转到状态 31
    explist  转到状态 51


状态 44

   22 exp: NAME '(' explist ')' •

    $default  使用规则 22 以归约 (exp)


状态 45

   21 exp: FUNC '(' explist ')' •

    $default  使用规则 21 以归约 (exp)


状态 46

    9 list: stmt • ';' list

    ';'  偏移，并进入状态 52


状态 47

    4 stmt: IF exp THEN list •
    5     | IF exp THEN list • ELSE list

    ELSE  偏移，并进入状态 53

    $default  使用规则 4 以归约 (stmt)


状态 48

    6 stmt: WHILE exp DO list •

    $default  使用规则 6 以归约 (stmt)


状态 49

   25 symlist: NAME •
   26        | NAME • ',' symlist

    ','  偏移，并进入状态 54

    $default  使用规则 25 以归约 (symlist)


状态 50

    3 calc: LET NAME '(' symlist • ')' '=' list EOL

    ')'  偏移，并进入状态 55


状态 51

   24 explist: exp ',' explist •

    $default  使用规则 24 以归约 (explist)


状态 52

    9 list: stmt ';' • list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    $default  使用规则 8 以归约 (list)

    stmt  转到状态 46
    list  转到状态 56
    exp   转到状态 13


状态 53

    5 stmt: IF exp THEN list ELSE • list

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    $default  使用规则 8 以归约 (list)

    stmt  转到状态 46
    list  转到状态 57
    exp   转到状态 13


状态 54

   26 symlist: NAME ',' • symlist

    NAME  偏移，并进入状态 49

    symlist  转到状态 58


状态 55

    3 calc: LET NAME '(' symlist ')' • '=' list EOL

    '='  偏移，并进入状态 59


状态 56

    9 list: stmt ';' list •

    $default  使用规则 9 以归约 (list)


状态 57

    5 stmt: IF exp THEN list ELSE list •

    $default  使用规则 5 以归约 (stmt)


状态 58

   26 symlist: NAME ',' symlist •

    $default  使用规则 26 以归约 (symlist)


状态 59

    3 calc: LET NAME '(' symlist ')' '=' • list EOL

    NUMBER  偏移，并进入状态 1
    NAME    偏移，并进入状态 2
    FUNC    偏移，并进入状态 3
    IF      偏移，并进入状态 5
    WHILE   偏移，并进入状态 6
    '-'     偏移，并进入状态 8
    '|'     偏移，并进入状态 9
    '('     偏移，并进入状态 10

    $default  使用规则 8 以归约 (list)

    stmt  转到状态 46
    list  转到状态 60
    exp   转到状态 13


状态 60

    3 calc: LET NAME '(' symlist ')' '=' list • EOL

    EOL  偏移，并进入状态 61


状态 61

    3 calc: LET NAME '(' symlist ')' '=' list EOL •

    $default  使用规则 3 以归约 (calc)
